{"version":3,"sources":["Components/WeekForecastItems/WeekForecastItems.module.css","Components/MainContainer/MainContainer.module.css","Components/CurrentDayDescription/CurrentDayTime/CurrentDayTime.module.css","Components/WeekForecastItems/WeekForecastItem/WeatherData/WeatherData.module.css","Components/Banner/Banner.module.css","App.module.css","Components/CurrentDayDescription/CurrentDate/CurrentDate.module.css","Components/common/Preloader/Preloader.module.css","Components/common/CurrentWeatherVideo/CurrentWeatherVideo.module.css","Components/WeekForecastItems/WeekForecastItem/DayData/DayData.module.css","Components/WeekForecastItems/WeekForecastItem/WeekForecastItem.module.css","Components/CurrentDayDescription/CurrentDate/CurrentDate.js","Components/common/Preloader/preloader.svg","Components/common/Preloader/Preloader.js","Selectors/currentDayTimeSelectors.js","Components/CurrentDayDescription/CurrentDayTime/CurrentDayTime.js","redux/currentDayTimeReducer.js","Components/CurrentDayDescription/CurrentDayDescription.js","Selectors/currentUserWeatherSelectors.js","API/userWeatherAPI.js","redux/userCurrentWeatherReducer.js","Selectors/userLocationSelectors.js","Components/CurrentTemperatureInPlace/CurrentWeather/CurrentWeather.js","API/userLocationAPI.js","redux/userLocationReducer.js","Components/CurrentTemperatureInPlace/CurrentPlace/CurrentPlace.js","Components/CurrentTemperatureInPlace/CurrentTemperatureInPlace.js","Components/WeekForecastItems/WeekForecastItem/WeatherData/WeatherData.js","Components/WeekForecastItems/WeekForecastItem/DayData/DayData.js","Components/WeekForecastItems/WeekForecastItem/WeekForecastItem.js","Selectors/weekForecastSelectors.js","API/forecastAPI.js","redux/forecastReducer.js","Components/WeekForecastItems/WeekForecastItems.js","assets/logo.png","Components/Banner/Banner.js","Components/MainContainer/MainContainer.js","Selectors/appSelectors.js","redux/appReducer.js","assets/videos/Starry night.mp4","assets/videos/Clouds.mp4","assets/videos/sunny.mp4","Components/common/CurrentWeatherVideo/CurrentWeatherVideo.js","assets/videos/Rain.mp4","App.js","reportWebVitals.js","redux/store.js","index.js","Components/CurrentTemperatureInPlace/CurrentTemperatureInPlace.module.css"],"names":["module","exports","CurrentDate","props","className","s","wrapper","date","Preloader","preloaderWrapper","water","getCurrentDay","state","currentDayTime","day","getCurrentDate","getCurrentTime","time","CurrentDayTime","SET_CURRENT_DAY_AND_TIME","TOGGLE_FETCHING","initialState","startIndex","isFetching","toggleFetching","type","setCurrentDayTime","today","dispatch","toLocaleDateString","split","join","hours","getHours","minutes","getMinutes","setCurrentDayTimeSuccess","getDay","CurrentDayDescription","currentDay","useSelector","currentDate","currentTime","useDispatch","useEffect","setInterval","callSetCurrentDayTime","Date","getCurrentTemperature","userCurrentWeather","currentTemperature","getCurrentWeatherDescription","currentWeatherDescription","instance","axios","create","baseURL","headers","userWeatherAPI","userCity","get","GET_USER_CURRENT_WEATHER","getUserCurrentWeatherSuccess","weatherDescription","getUserCity","userLocation","getUserCountry","userCountry","getUserCoordsLat","lat","getUserCoordsLon","lon","CurrentWeather","callGetUserCurrentWeather","city","a","userCityResult","includes","response","data","temperature","Math","ceil","main","temp","weather","console","log","getUserCurrentWeather","currentWeatherInfoWrapper","userLocationAPI","latitude","longitude","GET_USER_CITY","GET_USER_COORDS","getUserCitySuccess","getUserCoords","navigator","geolocation","getCurrentPosition","position","getUserLocation","coords","results","components","country","town","village","municipality","CurrentPlace","place","CurrentTemperatureInPlace","WeatherData","weatherDataWrapper","cn","commonStyles","forecastItemInfo","DayData","React","memo","dayDataWrapper","WeekForecastItem","forecastWrapper","getWeekForecastData","forecast","forecastData","forecastAPI","GET_FORECAST","getForecastSuccess","getForecast","list","WeekForecastItems","userCoordLat","userCoordLon","weekForecastData","callGetForecast","dayNum","days","forecastItemsWrapper","Object","keys","map","key","parseInt","length","Banner","logo","src","alt","name","MainContainer","leftContentWrapper","banner","rightContentWrapper","getInitializedStatus","app","isInitialized","INITIALIZE","appReducer","action","initializeApp","promise","Promise","all","then","CurrentWeatherVideo","currentHours","autoPlay","muted","loop","id","myVideo","StarryNight","Clear","App","wrapperDay","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.092e9767.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastItemsWrapper\":\"WeekForecastItems_forecastItemsWrapper__2g9K-\",\"forecastItemInfo\":\"WeekForecastItems_forecastItemInfo__1n1h_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MainContainer_wrapper__2-Gu5\",\"leftContentWrapper\":\"MainContainer_leftContentWrapper__1z1Dr\",\"banner\":\"MainContainer_banner__5XlXT\",\"rightContentWrapper\":\"MainContainer_rightContentWrapper__3HRCV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CurrentDayTime_wrapper__3Bw4f\",\"day\":\"CurrentDayTime_day__a9Aox\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"temperature\":\"WeatherData_temperature__1KKqB\",\"weatherDescription\":\"WeatherData_weatherDescription__1EWfw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Banner_wrapper__2NzRf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"App_wrapper__EMWHP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"date\":\"CurrentDate_date__2TlWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__1LzlK\",\"water\":\"Preloader_water__3VFjW\",\"wave\":\"Preloader_wave__2Z1pz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myVideo\":\"CurrentWeatherVideo_myVideo__1xC6O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dayDataWrapper\":\"DayData_dayDataWrapper__3UHsC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"forecastWrapper\":\"WeekForecastItem_forecastWrapper__2cPK9\"};","import React from 'react'\r\nimport s from \"./CurrentDate.module.css\"\r\n\r\nexport const CurrentDate = (props) => {\r\n    return <div className={s.wrapper}>\r\n        <p className={s.date}>{props.date}</p>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/preloader.56be47e5.svg\";","import React from 'react';\r\nimport preloader from \"./preloader.svg\";\r\nimport s from \"./Preloader.module.css\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div className={s.preloaderWrapper}>\r\n        {/*<div className={s.preloaderWrapper}>\r\n            <img src={preloader}></img>\r\n        </div>*/}\r\n        <div className={s.water}></div>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;\r\n\r\n","export const getCurrentDay = (state) => {\r\n    return state.currentDayTime.day\r\n}\r\nexport const getCurrentDate = (state) => {\r\n    return state.currentDayTime.date\r\n}\r\nexport const getCurrentTime = (state) => {\r\n    return state.currentDayTime.time\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.currentDayTime.isFetching\r\n}","import React from 'react'\r\nimport s from \"./CurrentDayTime.module.css\"\r\nimport {useSelector} from \"react-redux\";\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../../Selectors/currentDayTimeSelectors\";\r\n\r\nexport const CurrentDayTime = (props) => {\r\n/*\r\n    const isFetching = useSelector(getIsFetching)\r\n    if (isFetching) {\r\n        return <Preloader/>\r\n    }*/\r\n\r\n    return <div className={s.wrapper}>\r\n        <p className={s.day}>{props.day}</p>\r\n        <p className={s.time}>{props.time}</p>\r\n    </div>\r\n}","const SET_CURRENT_DAY_AND_TIME = 'currentDayTime/SET_CURRENT_DAY_AND_TIME'\r\nconst TOGGLE_FETCHING = 'currentDayTime/TOGGLE_FETCHING'\r\n\r\nlet initialState = {\r\n    day: null,\r\n    date: null,\r\n    time: null,\r\n    startIndex: 0,\r\n    isFetching: false\r\n}\r\n\r\nexport const currentDayTimeReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_CURRENT_DAY_AND_TIME:\r\n            return {\r\n                ...state,\r\n                day: action.day,\r\n                date: action.date,\r\n                time: action.time\r\n            }\r\n        case TOGGLE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const setCurrentDayTimeSuccess = (day, date, time) => ({\r\n    type: SET_CURRENT_DAY_AND_TIME,\r\n    day, date, time\r\n})\r\n\r\nexport const toggleFetching = (isFetching) => ({\r\n    type: TOGGLE_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const setCurrentDayTime = (today) => (dispatch) => {\r\n    dispatch(toggleFetching(true));\r\n    const date = today.toLocaleDateString().split(\"/\").join(\".\")\r\n\r\n    const hours = today.getHours()\r\n    let minutes = today.getMinutes()\r\n    if (minutes < 10) {\r\n        minutes = \"0\" + minutes\r\n    }\r\n    const time = [hours, minutes].join(\":\")\r\n\r\n    const dayNum = today.getDay()\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n    const day = days[dayNum]\r\n\r\n    dispatch(setCurrentDayTimeSuccess(day, date, time))\r\n    dispatch(toggleFetching(false));\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {CurrentDate} from \"./CurrentDate/CurrentDate\"\r\nimport {CurrentDayTime} from \"./CurrentDayTime/CurrentDayTime\"\r\nimport s from \"./CurrentDayDescription.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setCurrentDayTime} from \"../../redux/currentDayTimeReducer\";\r\nimport {getCurrentDate, getCurrentDay, getCurrentTime} from \"../../Selectors/currentDayTimeSelectors\";\r\n\r\nexport const CurrentDayDescription = (props) => {\r\n\r\n    const currentDay = useSelector(getCurrentDay);\r\n    const currentDate = useSelector(getCurrentDate);\r\n    const currentTime = useSelector(getCurrentTime);\r\n\r\n    const dispatch = useDispatch()\r\n    const callSetCurrentDayTime = (today) => {\r\n        dispatch(setCurrentDayTime(today))\r\n    }\r\n\r\n\r\n    useEffect( () => {\r\n        setInterval( () => {\r\n            let today = new Date()\r\n            callSetCurrentDayTime(today)\r\n        }, 1000 );\r\n    }, [currentDay, currentDate, currentTime])\r\n\r\n    return <div className={s.wrapper}>\r\n        <CurrentDayTime day={currentDay} time={currentTime} />\r\n        <CurrentDate date={currentDate}/>\r\n    </div>\r\n}\r\n","export const getCurrentTemperature = (state) => {\r\n    return state.userCurrentWeather.currentTemperature\r\n}\r\n\r\nexport const getCurrentWeatherDescription = (state) => {\r\n    return state.userCurrentWeather.currentWeatherDescription\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.userCurrentWeather.isFetching\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://community-open-weather-map.p.rapidapi.com/',\r\n    headers: {\r\n        /*'x-rapidapi-key': '7fd42db77bmsh129da9804f01968p1018fcjsn872884f7434f',\r\n        'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com'*/\r\n        'x-rapidapi-key': '5b1ebfdfdemshc9756a039c9c124p158fe2jsn8c2dcf327056',\r\n        'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com'\r\n    }\r\n})\r\n\r\n\r\nexport const userWeatherAPI = {\r\n    getUserCurrentWeather(userCity) {\r\n        return instance.get(`weather?q=${userCity}`)\r\n    },\r\n\r\n\r\n}","import {userWeatherAPI} from \"../API/userWeatherAPI\";\r\n\r\nconst GET_USER_CURRENT_WEATHER = 'userCurrentWeather/GET_USER_CURRENT_WEATHER'\r\nconst TOGGLE_FETCHING = 'userCurrentWeather/TOGGLE_FETCHING'\r\n\r\nlet initialState = {\r\n    currentTemperature: null,\r\n    currentWeatherDescription: null,\r\n    isFetching: false\r\n}\r\n\r\nexport const userCurrentWeatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_CURRENT_WEATHER:\r\n            return {\r\n                ...state,\r\n                currentTemperature: action.currentTemperature,\r\n                currentWeatherDescription: action.weatherDescription\r\n            };\r\n        case TOGGLE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const toggleFetching = (isFetching) => ({\r\n    type: TOGGLE_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const getUserCurrentWeatherSuccess = (currentTemperature, weatherDescription) => ({\r\n    type: GET_USER_CURRENT_WEATHER,\r\n    currentTemperature, weatherDescription\r\n})\r\n\r\nexport const getUserCurrentWeather = (userCity) => async (dispatch) => {\r\n    if (userCity) {\r\n        try {\r\n            dispatch(toggleFetching(true))\r\n            let userCityResult;\r\n            if (userCity.includes(\" \")) {\r\n                userCityResult = userCity.split(\" \")[0];\r\n            } else {\r\n                userCityResult = userCity;\r\n            }\r\n\r\n            let response = await userWeatherAPI.getUserCurrentWeather(userCityResult)\r\n\r\n            const data = response.data\r\n            const temperature = Math.ceil(data.main.temp - 273.15)\r\n            const weatherDescription = data.weather[0].main;\r\n\r\n            dispatch(getUserCurrentWeatherSuccess(temperature, weatherDescription));\r\n        } catch (error) {\r\n            console.log(\"Some error occured\");\r\n        }\r\n        dispatch(toggleFetching(false))\r\n    }\r\n}","export const getUserCity = (state) => {\r\n    return state.userLocation.userCity\r\n}\r\nexport const getUserCountry = (state) => {\r\n    return state.userLocation.userCountry\r\n}\r\nexport const getUserCoordsLat = (state) => {\r\n    return state.userLocation.lat\r\n}\r\nexport const getUserCoordsLon = (state) => {\r\n    return state.userLocation.lon\r\n}\r\n\r\n","import React, {useEffect} from 'react'\r\nimport s from \"../CurrentTemperatureInPlace.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getCurrentTemperature, getCurrentWeatherDescription} from \"../../../Selectors/currentUserWeatherSelectors\";\r\nimport {getUserCurrentWeather} from \"../../../redux/userCurrentWeatherReducer\";\r\nimport {getUserCity} from \"../../../Selectors/userLocationSelectors\";\r\n\r\nexport const CurrentWeather = (props) => {\r\n\r\n    const currentTemperature = useSelector(getCurrentTemperature)\r\n    const userCity = useSelector(getUserCity)\r\n    const currentWeatherDescription = useSelector(getCurrentWeatherDescription)\r\n\r\n    const dispatch = useDispatch();\r\n    const callGetUserCurrentWeather = (city) => {\r\n        dispatch(getUserCurrentWeather(city))\r\n    }\r\n\r\n    useEffect(() => {\r\n        callGetUserCurrentWeather(userCity)\r\n        setInterval( () => {\r\n            callGetUserCurrentWeather(userCity)\r\n        }, 600000)\r\n    }, [currentTemperature, userCity])\r\n\r\n    return <div className={s.currentWeatherInfoWrapper}>\r\n        <p className={s.temperature}>{currentTemperature}°C</p>\r\n        <p className={s.currentWeatherDescription}>{currentWeatherDescription}</p>\r\n    </div>\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://api.opencagedata.com/'\r\n})\r\n\r\nexport const userLocationAPI = {\r\n    getUserLocation(latitude, longitude) {\r\n        return instance.get(`geocode/v1/json?q=${latitude}+${longitude}&key=744294860dd0478b89d80a08c094bda1`)\r\n    }\r\n}\r\n","import {userLocationAPI} from \"../API/userLocationAPI\";\r\n\r\nconst GET_USER_CITY = 'userLocation/SET_USER_CITY'\r\nconst GET_USER_COORDS = 'userLocation/GET_USER_COORDS'\r\nconst TOGGLE_FETCHING = 'userCurrentWeather/TOGGLE_FETCHING'\r\n\r\nlet initialState = {\r\n    userCity: null,\r\n    userCountry: null,\r\n    lat: null,\r\n    lon: null,\r\n    isFetching: false\r\n}\r\n\r\nexport const userLocationReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_CITY:\r\n            return { ...state, userCity: action.userCity, userCountry: action.userCountry }\r\n        case GET_USER_COORDS:\r\n            return { ...state,  lat: action.lat, lon: action.lon}\r\n        case TOGGLE_FETCHING:\r\n            return {...state, isFetching: action.isFetching}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const toggleFetching = (isFetching) => ({\r\n    type: TOGGLE_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const getUserCitySuccess = (userCity, userCountry) => ({\r\n    type: GET_USER_CITY,\r\n        userCity, userCountry\r\n})\r\nexport const getUserCoordsSuccess = (lat, lon) => ({\r\n    type: GET_USER_COORDS,\r\n    lat, lon\r\n})\r\n\r\nexport const getUserCoords = () => (dispatch) => {\r\n    navigator.geolocation.getCurrentPosition(function(position) {\r\n        dispatch(getUserLocation(position.coords.latitude, position.coords.longitude))\r\n        dispatch(getUserCoordsSuccess(position.coords.latitude, position.coords.longitude))\r\n    });\r\n}\r\n\r\nexport const getUserLocation = (latitude, longitude) => async (dispatch) => {\r\n    try {\r\n        dispatch(toggleFetching(true))\r\n        let response = await userLocationAPI.getUserLocation(latitude, longitude)\r\n\r\n        const userLocation = response.data.results[0].components\r\n        const userCountry = userLocation.country\r\n        const userCity = userLocation.town || userLocation.village || userLocation.municipality\r\n\r\n        dispatch(getUserCitySuccess(userCity, userCountry));\r\n    } catch(error) {\r\n        console.log(\"Some error occured\");\r\n    }\r\n    dispatch(toggleFetching(false))\r\n}","import React, {useEffect} from 'react'\r\nimport s from \"../CurrentTemperatureInPlace.module.css\"\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getUserCity, getUserCountry} from \"../../../Selectors/userLocationSelectors\";\r\nimport {getUserCoords} from \"../../../redux/userLocationReducer\";\r\n\r\nexport const CurrentPlace = (props) => {\r\n\r\n    const userCity = useSelector(getUserCity)\r\n    const userCountry = useSelector(getUserCountry)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const callGetUserCoords = () => {\r\n        dispatch(getUserCoords());\r\n    }\r\n\r\n    useEffect(() => {\r\n        callGetUserCoords()\r\n    }, [userCity, userCountry])\r\n\r\n    return <div>\r\n        <p className={s.place}>{userCity}, {userCountry}</p>\r\n    </div>\r\n}","import React from 'react'\r\nimport {CurrentWeather} from \"./CurrentWeather/CurrentWeather\"\r\nimport {CurrentPlace} from \"./CurrentPlace/CurrentPlace\"\r\nimport s from \"./CurrentTemperatureInPlace.module.css\"\r\nimport {useSelector} from \"react-redux\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {getIsFetching} from \"../../Selectors/currentUserWeatherSelectors\";\r\n\r\nexport const CurrentTemperatureInPlace = (props) => {\r\n\r\n    return <div className={s.wrapper}>\r\n        <CurrentWeather/>\r\n        <CurrentPlace/>\r\n    </div>\r\n}","import React from 'react'\r\nimport s from \"./WeatherData.module.css\"\r\nimport commonStyles from \"../../WeekForecastItems.module.css\"\r\nimport cn from \"classnames\"\r\n\r\nexport const WeatherData = ({temperature, weatherDescription}) => {\r\n    return <div className={s.weatherDataWrapper}>\r\n        <div className={cn(commonStyles.forecastItemInfo, s.temperature)}>\r\n            <p>{temperature}°C</p>\r\n        </div>\r\n        <div className={cn(commonStyles.forecastItemInfo, s.weatherDescription)}>\r\n            <p>{weatherDescription}</p>\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport s from \"./DayData.module.css\"\r\nimport commonStyles from \"../../WeekForecastItems.module.css\"\r\n\r\n\r\nconst DayData = React.memo(({day}) => {\r\n        return <div className={s.dayDataWrapper}>\r\n            <div className={commonStyles.forecastItemInfo}>\r\n                <p>{day}</p>\r\n            </div>\r\n        </div>\r\n    }\r\n)\r\n\r\n\r\nexport default DayData","import React from 'react'\r\nimport {WeatherData} from \"./WeatherData/WeatherData\";\r\nimport DayData from \"./DayData/DayData\";\r\nimport s from \"./WeekForecastItem.module.css\"\r\n\r\nexport const WeekForecastItem = ({temperature, weatherDescription, day}) => {\r\n\r\n    temperature = Math.ceil(temperature - 273.15)\r\n    if (weatherDescription === \"Clear\") {\r\n        weatherDescription = \"Sunny\"\r\n    }\r\n\r\n    return <div className={s.forecastWrapper}>\r\n\r\n        <WeatherData temperature={temperature} weatherDescription={weatherDescription}/>\r\n        <DayData day={day}/>\r\n    </div>\r\n}","export const getWeekForecastData = (state) => {\r\n    return state.forecast.forecastData\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.forecast.isFetching\r\n}","import axios from \"axios\";\r\n\r\nconst instance = axios.create ({\r\n    baseURL: 'https://weatherbit-v1-mashape.p.rapidapi.com/',\r\n    headers: {\r\n        'x-rapidapi-key': '7fd42db77bmsh129da9804f01968p1018fcjsn872884f7434f',\r\n        'x-rapidapi-host': 'community-open-weather-map.p.rapidapi.com'\r\n    }\r\n})\r\n\r\nexport const forecastAPI = {\r\n    getForecast(lat, lon) {\r\n        return instance.get(`forecast/daily?lat=${lat}&lon=${lon}`)\r\n    }\r\n}","import {forecastAPI} from \"../API/forecastAPI\";\r\n\r\nconst GET_FORECAST = 'forecast/GET_FORECAST'\r\nconst TOGGLE_FETCHING = 'forecast/TOGGLE_FETCHING'\r\n\r\nlet initialState = {\r\n    forecastData: [],\r\n    isFetching: false\r\n}\r\n\r\nexport const forecastReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_FORECAST:\r\n            return {\r\n                ...state,\r\n                forecastData: action.forecastData\r\n            }\r\n        case TOGGLE_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const getForecastSuccess = (forecastData, currentDay) => ({\r\n    type: GET_FORECAST,\r\n    forecastData, currentDay\r\n})\r\n\r\nexport const toggleFetching = (isFetching) => ({\r\n    type: TOGGLE_FETCHING,\r\n    isFetching\r\n})\r\n\r\nexport const getForecast = (lat, lon, currentDay) => async (dispatch) => {\r\n    try {\r\n        dispatch(toggleFetching(true));\r\n        if (lat && lon) {\r\n            const response = await forecastAPI.getForecast(lat, lon)\r\n            const forecastData = response.data.list\r\n\r\n            dispatch(getForecastSuccess(forecastData, currentDay))\r\n        }\r\n    } catch (error) {\r\n        console.log(\"Some error\");\r\n    }\r\n    dispatch(toggleFetching(false));\r\n}\r\n","import React, {useEffect} from 'react'\r\nimport {WeekForecastItem} from \"./WeekForecastItem/WeekForecastItem\";\r\nimport s from \"./WeekForecastItems.module.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {getIsFetching, getWeekForecastData} from \"../../Selectors/weekForecastSelectors\";\r\nimport {getUserCoordsLat, getUserCoordsLon} from \"../../Selectors/userLocationSelectors\";\r\nimport {getCurrentDay} from \"../../Selectors/currentDayTimeSelectors\";\r\nimport {getForecast} from \"../../redux/forecastReducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nexport const WeekForecastItems = (props) => {\r\n\r\n    const userCoordLat = useSelector(getUserCoordsLat)\r\n    const userCoordLon = useSelector(getUserCoordsLon)\r\n    const currentDay = useSelector(getCurrentDay)\r\n    const weekForecastData = useSelector(getWeekForecastData)\r\n\r\n    const dispatch = useDispatch()\r\n    const callGetForecast = (userCoordLat, userCoordLon, currentDay) => {\r\n        dispatch(getForecast(userCoordLat, userCoordLon, currentDay))\r\n    }\r\n\r\n    useEffect(() => {\r\n        callGetForecast(userCoordLat, userCoordLon, currentDay)\r\n    }, [userCoordLat, userCoordLon, currentDay])\r\n\r\n    const today = new Date()\r\n    let dayNum = today.getDay()\r\n\r\n    let days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\r\n\r\n  /*  const isFetching = useSelector(getIsFetching)\r\n\r\n    if (isFetching) {\r\n        return <Preloader/>\r\n    }\r\n*/\r\n    return <div className={s.forecastItemsWrapper}>\r\n        <h2>Weekly forecast</h2>\r\n        <div>\r\n            {Object.keys(weekForecastData).map( key => {\r\n                return <WeekForecastItem temperature={weekForecastData[key].temp.day} weatherDescription={weekForecastData[key].weather[0].main}\r\n                                         key={key} day={\r\n                                            (dayNum + parseInt(key)) > (days.length - 1)\r\n                                            ? days[((parseInt(key)) % days.length) - (days.length - dayNum)]\r\n                                            : days[(dayNum + ((parseInt(key)) % days.length))]\r\n                }\r\n                />\r\n            } )}\r\n\r\n        </div>\r\n    </div>\r\n}","export default __webpack_public_path__ + \"static/media/logo.59a0a5e4.png\";","import React from 'react'\r\nimport s from './Banner.module.css'\r\nimport logo from '../../assets/logo.png'\r\n\r\nexport const Banner = (props) => {\r\n    return <div className={s.wrapper}>\r\n        <div className={s.logo}>\r\n            <img src={logo} alt=\"logo\"/>\r\n        </div>\r\n        <div className={s.name}>\r\n            <h1>Weathery</h1>\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport {CurrentDayDescription} from \"../CurrentDayDescription/CurrentDayDescription\"\r\nimport {CurrentTemperatureInPlace} from \"../CurrentTemperatureInPlace/CurrentTemperatureInPlace\"\r\nimport {WeekForecastItems} from \"../WeekForecastItems/WeekForecastItems\"\r\nimport s from \"./MainContainer.module.css\"\r\nimport {Banner} from \"../Banner/Banner\";\r\n\r\nexport const MainContainer = (props) => {\r\n    return <div className={s.wrapper}>\r\n        <div className={s.leftContentWrapper}>\r\n            <CurrentDayDescription/>\r\n            <CurrentTemperatureInPlace/>\r\n        </div>\r\n        <div className={s.banner}>\r\n            <Banner/>\r\n        </div>\r\n        <div className={s.rightContentWrapper}>\r\n            <WeekForecastItems/>\r\n        </div>\r\n    </div>\r\n}","export const getInitializedStatus = (state) => {\r\n    return state.app.isInitialized\r\n}","import {getUserCoords} from \"./userLocationReducer\";\r\nimport {getForecast} from \"./forecastReducer\";\r\n\r\nconst INITIALIZE = 'app/INITIALIZE'\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZE:\r\n            return { ...state, isInitialized: true}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initializeSuccess = () => ({\r\n    type: INITIALIZE,\r\n})\r\n\r\nexport const initializeApp = (lat, lon, currentDay) => (dispatch) => {\r\n    let promise = [dispatch(getUserCoords(lat, lon)), dispatch(getForecast(lat, lon, currentDay))]\r\n\r\n    Promise.all([promise])\r\n        .then( () => {\r\n            dispatch(initializeSuccess());\r\n        })\r\n}\r\n\r\nexport default appReducer;","export default __webpack_public_path__ + \"static/media/Starry night.4bb8814b.mp4\";","export default __webpack_public_path__ + \"static/media/Clouds.fd064f2a.mp4\";","export default __webpack_public_path__ + \"static/media/sunny.4522a3f2.mp4\";","import React from 'react'\r\nimport s from \"./CurrentWeatherVideo.module.css\"\r\n\r\nimport Clouds from \"../../../assets/videos/Clouds.mp4\"\r\nimport StarryNight from \"../../../assets/videos/Starry night.mp4\"\r\nimport Clear from \"../../../assets/videos/sunny.mp4\"\r\nimport Rain from \"../../../assets/videos/Rain.mp4\"\r\nimport {useSelector} from \"react-redux\";\r\nimport {getCurrentTime} from \"../../../Selectors/currentDayTimeSelectors\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\n\r\nexport const CurrentWeatherVideo = ({weather}) => {\r\n\r\n    const currentTime = useSelector(getCurrentTime)\r\n\r\n    let currentHours\r\n    if (currentTime) {\r\n        currentHours = currentTime.split(\":\")[0]\r\n\r\n        if ((currentHours >= 19 && currentHours <= 23) || (currentHours >= 0 && currentHours <= 5)) {\r\n            return <video autoPlay muted loop id={s.myVideo}>\r\n                <source src={StarryNight} type=\"video/mp4\"/>\r\n            </video>\r\n        } else {\r\n            return <video autoPlay muted loop id={s.myVideo}>\r\n                <source src={Clear} type=\"video/mp4\"/>\r\n                {/*{weather === \"Clouds\" && <source src={Clouds} type=\"video/mp4\"/>}\r\n                {weather === \"Clear\" && <source src={Clear} type=\"video/mp4\"/>}\r\n                {weather === \"Rain\" && <source src={Rain} type=\"video/mp4\"/>}*/}\r\n            </video>\r\n        }\r\n    } else {\r\n        return <Preloader/>\r\n    }\r\n}","export default __webpack_public_path__ + \"static/media/Rain.e0606565.mp4\";","import s from './App.module.css';\nimport React, {useEffect} from 'react';\nimport cn from \"classnames\";\nimport {MainContainer} from \"./Components/MainContainer/MainContainer\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getInitializedStatus} from \"./Selectors/appSelectors\";\nimport {initializeApp} from \"./redux/appReducer\";\nimport Preloader from \"./Components/common/Preloader/Preloader\";\nimport {getCurrentWeatherDescription} from \"./Selectors/currentUserWeatherSelectors\";\nimport {CurrentWeatherVideo} from \"./Components/common/CurrentWeatherVideo/CurrentWeatherVideo\";\nimport {getCurrentTime} from \"./Selectors/currentDayTimeSelectors\";\n\nexport const App = () => {\n\n    const isInitialized = useSelector(getInitializedStatus)\n    const currentWeatherDescription = useSelector(getCurrentWeatherDescription)\n    const currentTime = useSelector(getCurrentTime);\n\n    const dispatch = useDispatch()\n    const callInitializeApp = () => {\n        dispatch(initializeApp())\n    }\n\n    useEffect(() => {\n        callInitializeApp()\n    }, [])\n\n\n    if (!isInitialized) {\n        return <Preloader/>\n    }\n\n    return <div className={cn(s.wrapper, s.wrapperDay)}>\n        <MainContainer/>\n        <CurrentWeatherVideo weather={currentWeatherDescription}/>\n    </div>\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {userLocationReducer} from \"./userLocationReducer\";\r\nimport {userCurrentWeatherReducer} from \"./userCurrentWeatherReducer\";\r\nimport {appReducer} from \"./appReducer\";\r\nimport {currentDayTimeReducer} from \"./currentDayTimeReducer\";\r\nimport {forecastReducer} from \"./forecastReducer\";\r\n\r\nlet reducers = combineReducers({\r\n    userLocation: userLocationReducer,\r\n    userCurrentWeather: userCurrentWeatherReducer,\r\n    app: appReducer,\r\n    currentDayTime: currentDayTimeReducer,\r\n    forecast: forecastReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CurrentTemperatureInPlace_wrapper__3TvQr\",\"temperature\":\"CurrentTemperatureInPlace_temperature__2oNgs\",\"place\":\"CurrentTemperatureInPlace_place__1BhPr\",\"currentWeatherInfoWrapper\":\"CurrentTemperatureInPlace_currentWeatherInfoWrapper__KmyiP\",\"currentWeatherDescription\":\"CurrentTemperatureInPlace_currentWeatherDescription__Auyne\"};"],"sourceRoot":""}